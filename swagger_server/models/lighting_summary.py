# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.lighting_zone import LightingZone  # noqa: F401,E501
from swagger_server.models.lighting_zone_status import LightingZoneStatus  # noqa: F401,E501
from swagger_server import util


class LightingSummary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, zones: List[LightingZone]=None, zone_status: List[LightingZoneStatus]=None):  # noqa: E501
        """LightingSummary - a model defined in Swagger

        :param zones: The zones of this LightingSummary.  # noqa: E501
        :type zones: List[LightingZone]
        :param zone_status: The zone_status of this LightingSummary.  # noqa: E501
        :type zone_status: List[LightingZoneStatus]
        """
        self.swagger_types = {
            'zones': List[LightingZone],
            'zone_status': List[LightingZoneStatus]
        }

        self.attribute_map = {
            'zones': 'zones',
            'zone_status': 'zoneStatus'
        }
        self._zones = zones
        self._zone_status = zone_status

    @classmethod
    def from_dict(cls, dikt) -> 'LightingSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LightingSummary of this LightingSummary.  # noqa: E501
        :rtype: LightingSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zones(self) -> List[LightingZone]:
        """Gets the zones of this LightingSummary.


        :return: The zones of this LightingSummary.
        :rtype: List[LightingZone]
        """
        return self._zones

    @zones.setter
    def zones(self, zones: List[LightingZone]):
        """Sets the zones of this LightingSummary.


        :param zones: The zones of this LightingSummary.
        :type zones: List[LightingZone]
        """

        self._zones = zones

    @property
    def zone_status(self) -> List[LightingZoneStatus]:
        """Gets the zone_status of this LightingSummary.


        :return: The zone_status of this LightingSummary.
        :rtype: List[LightingZoneStatus]
        """
        return self._zone_status

    @zone_status.setter
    def zone_status(self, zone_status: List[LightingZoneStatus]):
        """Sets the zone_status of this LightingSummary.


        :param zone_status: The zone_status of this LightingSummary.
        :type zone_status: List[LightingZoneStatus]
        """

        self._zone_status = zone_status
