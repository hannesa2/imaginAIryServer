# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class City(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, name: str=None, lat: float=None, lon: float=None, country: str=None):  # noqa: E501
        """City - a model defined in Swagger

        :param id: The id of this City.  # noqa: E501
        :type id: int
        :param name: The name of this City.  # noqa: E501
        :type name: str
        :param lat: The lat of this City.  # noqa: E501
        :type lat: float
        :param lon: The lon of this City.  # noqa: E501
        :type lon: float
        :param country: The country of this City.  # noqa: E501
        :type country: str
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'lat': float,
            'lon': float,
            'country': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'lat': 'lat',
            'lon': 'lon',
            'country': 'country'
        }
        self._id = id
        self._name = name
        self._lat = lat
        self._lon = lon
        self._country = country

    @classmethod
    def from_dict(cls, dikt) -> 'City':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The City of this City.  # noqa: E501
        :rtype: City
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this City.


        :return: The id of this City.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this City.


        :param id: The id of this City.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this City.


        :return: The name of this City.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this City.


        :param name: The name of this City.
        :type name: str
        """

        self._name = name

    @property
    def lat(self) -> float:
        """Gets the lat of this City.


        :return: The lat of this City.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat: float):
        """Sets the lat of this City.


        :param lat: The lat of this City.
        :type lat: float
        """

        self._lat = lat

    @property
    def lon(self) -> float:
        """Gets the lon of this City.


        :return: The lon of this City.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon: float):
        """Sets the lon of this City.


        :param lon: The lon of this City.
        :type lon: float
        """

        self._lon = lon

    @property
    def country(self) -> str:
        """Gets the country of this City.


        :return: The country of this City.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country: str):
        """Sets the country of this City.


        :param country: The country of this City.
        :type country: str
        """

        self._country = country
